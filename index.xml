<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eRunn&#39;s Blog</title>
    <link>https://blog.dpf114.top/</link>
    <description>Recent content on eRunn&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>446933040@qq.com (pikachues)</managingEditor>
    <webMaster>446933040@qq.com (pikachues)</webMaster>
    <lastBuildDate>Tue, 22 Dec 2020 17:20:56 +0800</lastBuildDate><atom:link href="https://blog.dpf114.top/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>自用Linux常用命令</title>
      <link>https://blog.dpf114.top/posts/linux-often/</link>
      <pubDate>Sun, 22 Nov 2020 17:20:56 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/linux-often/</guid>
      <description>Linux常用命令 1.连接 1 ssh root@ip 2.文件上传下载 windows中使用xshell(强烈推荐)或者FinalShell，Mac也可以使用Fin</description>
    </item>
    
    <item>
      <title>Git非官方使用总结</title>
      <link>https://blog.dpf114.top/posts/git-often-used/</link>
      <pubDate>Tue, 22 Dec 2020 17:20:56 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/git-often-used/</guid>
      <description>1.什么版本控制系统 单独的讲版本控制我们或许不知道它是什么，但是举个我们生活中的小例子，我们很容易明白它是什么。 例如我们毕业修改无数遍的论文</description>
    </item>
    
    <item>
      <title>Nginx常用配置（反向代理、负载均衡、动静分离、高可用集群）</title>
      <link>https://blog.dpf114.top/posts/nginx-config/</link>
      <pubDate>Tue, 22 Dec 2020 17:20:56 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/nginx-config/</guid>
      <description>1.Nginx是什么 Nginx是一个高性能的Web和反向代理服务器。作为web服务器它与我们常用的web应用服务器（tomcat、jetty</description>
    </item>
    
    <item>
      <title>文章加密测试</title>
      <link>https://blog.dpf114.top/test/</link>
      <pubDate>Sun, 29 Nov 2020 11:10:20 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/test/</guid>
      <description></description>
    </item>
    
    <item>
      <title>与HTTP相关的组件</title>
      <link>https://blog.dpf114.top/posts/%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Tue, 25 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/%E4%B8%8Ehttp%E7%9B%B8%E5%85%B3%E7%9A%84%E7%BB%84%E4%BB%B6/</guid>
      <description>网络模型 网络是一个复杂的系统，不仅包括大量的应用程序、端系统、通信链路、分组交换机等，还有各种各样的协议组成，那么现在我们就来聊一下网络中的</description>
    </item>
    
    <item>
      <title>Cookie和Session</title>
      <link>https://blog.dpf114.top/posts/cookie%E5%92%8Csession/</link>
      <pubDate>Sun, 23 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/cookie%E5%92%8Csession/</guid>
      <description>HTTP 协议是一种无状态协议，即每次服务端接收到客户端的请求时，都是一个全新的请求，服务器并不知道客户端的历史请求记录；Session和Cooki</description>
    </item>
    
    <item>
      <title>jwt和Session cookies（临时cookies）</title>
      <link>https://blog.dpf114.top/posts/jwt%E5%92%8Csession-cookies%E4%B8%B4%E6%97%B6cookies/</link>
      <pubDate>Sun, 23 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/jwt%E5%92%8Csession-cookies%E4%B8%B4%E6%97%B6cookies/</guid>
      <description>JSON Web Token简称JWT，它和Session Cookies(临时Cookies)都可以为网站提供用户的身份认证，但是它们不是一回事。 下对对J</description>
    </item>
    
    <item>
      <title>HTTPS</title>
      <link>https://blog.dpf114.top/posts/https/</link>
      <pubDate>Sat, 22 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/https/</guid>
      <description>1.HTTPS为什么会出现 一个新技术的出现必定是为了解决某种问题的。什么问题呢？一个简答的回答就是HTTP的安全性问题。由于HTTP采用明文</description>
    </item>
    
    <item>
      <title>HTTP优缺点</title>
      <link>https://blog.dpf114.top/posts/http%E4%BC%98%E7%BC%BA%E7%82%B9/</link>
      <pubDate>Wed, 19 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/http%E4%BC%98%E7%BC%BA%E7%82%B9/</guid>
      <description>1.HTTP的优点 简单灵活易扩展 HTTP最突出的优点是简单、灵活、易于扩展。 HTTP协议比较简单，它的主要组成就是 header+body,头</description>
    </item>
    
    <item>
      <title>HTTP认证</title>
      <link>https://blog.dpf114.top/posts/http%E8%AE%A4%E8%AF%81/</link>
      <pubDate>Wed, 19 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/http%E8%AE%A4%E8%AF%81/</guid>
      <description>HTTP提供了用于访问控制和身份认证的功能，下面对HTTP的权限和认证功能进行介绍。 1.通用HTTP认证框架 RFC 7235 定义了 HTTP 身份认证框架，服务器</description>
    </item>
    
    <item>
      <title>HTTP跨域请求</title>
      <link>https://blog.dpf114.top/posts/http%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</link>
      <pubDate>Wed, 19 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/http%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82/</guid>
      <description>1.什么是跨域请求CROS CROS 的全称是 Cross-Origin Resource Sharing(CROS)，中文译为 跨域资源共享，它是一种机制，它使用附加的HTTP标头来告诉浏览器</description>
    </item>
    
    <item>
      <title>HTTP协议(六)HTTP首部(请求标头)</title>
      <link>https://blog.dpf114.top/posts/6.http%E9%A6%96%E9%83%A8%E8%AF%B7%E6%B1%82%E6%A0%87%E5%A4%B4/</link>
      <pubDate>Sat, 15 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/6.http%E9%A6%96%E9%83%A8%E8%AF%B7%E6%B1%82%E6%A0%87%E5%A4%B4/</guid>
      <description>HTTP协议的请求和响应报文中必定包含HTTP首部，只是我们平时在使用Web的过程中感受不到他。这篇文章我们一起来看看HTTP首部的结构和各</description>
    </item>
    
    <item>
      <title>HTTP协议(五)与HTTP协作的Web服务器</title>
      <link>https://blog.dpf114.top/posts/5.%E4%B8%8Ehttp%E5%8D%8F%E4%BD%9C%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Mon, 10 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/5.%E4%B8%8Ehttp%E5%8D%8F%E4%BD%9C%E7%9A%84web%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>一台 Web 服务器可搭建多个独立域名的 Web 网站，也可作为通信路径上的中转服务器提升传输效率。 1.用单台虚拟机实现多个域名 HTTP/1.1规范允许一台</description>
    </item>
    
    <item>
      <title>HTTP协议(四)返回结果的HTTP状态码</title>
      <link>https://blog.dpf114.top/posts/4.%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84http%E7%8A%B6%E6%80%81%E7%A0%81/</link>
      <pubDate>Fri, 07 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/4.%E8%BF%94%E5%9B%9E%E7%BB%93%E6%9E%9C%E7%9A%84http%E7%8A%B6%E6%80%81%E7%A0%81/</guid>
      <description>HTTP状态码负责表示客户端HTTP请求的返回结果、标记服务器端的处理是否正常、通知出现错误等工作。 1.状态码类别 状态码的职责是当客户端向服</description>
    </item>
    
    <item>
      <title>HTTP协议(三)HTTP报文中的HTTP信息</title>
      <link>https://blog.dpf114.top/posts/3.http%E6%8A%A5%E6%96%87%E4%B8%AD%E7%9A%84http%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Wed, 05 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/3.http%E6%8A%A5%E6%96%87%E4%B8%AD%E7%9A%84http%E4%BF%A1%E6%81%AF/</guid>
      <description>HTTP通信过程包括从客户端发往服务器端的请求及从服务器返回客户端的请求。 1.HTTP报文 用于HTTP协议交互的信息称为HTTP报文。请求端</description>
    </item>
    
    <item>
      <title>HTTP协议(二)简单的HTTP协议</title>
      <link>https://blog.dpf114.top/posts/2.%E7%AE%80%E5%8D%95%E7%9A%84http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Sun, 02 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/2.%E7%AE%80%E5%8D%95%E7%9A%84http%E5%8D%8F%E8%AE%AE/</guid>
      <description>1.HTTP协议用于客户端和服务端之间的通信 HTTP 协议和 TCP/IP 协议族内的其他众多的协议相同，用于客户端和服务器之间的通信。 HTTP通信时一定有一个客</description>
    </item>
    
    <item>
      <title>HTTP协议(一)了解web及网络基础</title>
      <link>https://blog.dpf114.top/posts/1%E4%BA%86%E8%A7%A3web%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sat, 01 Aug 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/1%E4%BA%86%E8%A7%A3web%E5%8F%8A%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
      <description>1.使用HTTP协议访问Web 你知道当我们在网页浏览器(Web browser)的地址栏中输入 URL时，Web 页面是如何呈现的吗? 如上图所示我</description>
    </item>
    
    <item>
      <title>SpringMVC</title>
      <link>https://blog.dpf114.top/posts/springmvc/</link>
      <pubDate>Wed, 18 Mar 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/springmvc/</guid>
      <description>1.什么是SpringMVC?简单的解释一下你对SpringMVC的理解？ SpringMVC是一个基于java实现了MVC设计模式的一个轻量</description>
    </item>
    
    <item>
      <title>Python基础学习</title>
      <link>https://blog.dpf114.top/posts/pythonbasestudy/</link>
      <pubDate>Wed, 04 Mar 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/pythonbasestudy/</guid>
      <description>1.基本语法 1 2 3 4 5 6 1.Python中严格区分大小写 2.Python中的每一行就是一条语句，每条语句以换行结束 3.Python中每一条语</description>
    </item>
    
    <item>
      <title>frp实现内网穿透</title>
      <link>https://blog.dpf114.top/posts/frpinnetpass/</link>
      <pubDate>Tue, 03 Mar 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/frpinnetpass/</guid>
      <description>前言 最近学习微信公众号，微信公众号测试时需要内网穿透，开始时使用ngrock(第一天用的挺稳)，第二天连接ngrock时发现总是不能连接，于</description>
    </item>
    
    <item>
      <title>Hello</title>
      <link>https://blog.dpf114.top/posts/hello/</link>
      <pubDate>Mon, 03 Feb 2020 22:14:55 +0800</pubDate>
      <author>446933040@qq.com (pikachues)</author>
      <guid>https://blog.dpf114.top/posts/hello/</guid>
      <description>常用命令 1 2 3 4 5 # 新建文章 hugo new /post xxx.md # 编译运行 hugo server 文章头 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 title: &amp;#34;标题&amp;#34; author: &amp;#34;</description>
    </item>
    
  </channel>
</rss>
